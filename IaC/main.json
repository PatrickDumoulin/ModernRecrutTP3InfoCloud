{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.20.4.51522",
      "templateHash": "434137570091935008"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "serverName": {
      "type": "string",
      "defaultValue": "modernrecrut120"
    },
    "dbUser": {
      "type": "string",
      "defaultValue": "ModernRecrutAdmin"
    },
    "dbPassword": {
      "type": "securestring",
      "minLength": 10,
      "maxLength": 20
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "stdocuments120"
    },
    "containerName": {
      "type": "string",
      "defaultValue": "Images"
    }
  },
  "variables": {
    "AppSpecs": [
      {
        "name": "mvc",
        "sku": "S1"
      },
      {
        "name": "postulation",
        "sku": "B1"
      },
      {
        "name": "emplois",
        "sku": "F1"
      },
      {
        "name": "documents",
        "sku": "F1"
      },
      {
        "name": "favoris",
        "sku": "F1"
      }
    ],
    "dbSettings": [
      {
        "name": "postulation",
        "sku": "Standard"
      },
      {
        "name": "emplois",
        "sku": "Basic"
      }
    ]
  },
  "resources": [
    {
      "copy": {
        "name": "AppServices",
        "count": "[length(variables('AppSpecs'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('AppSpecs')[copyIndex()].name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appName": {
            "value": "[variables('AppSpecs')[copyIndex()].name]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": "[variables('AppSpecs')[copyIndex()].sku]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "17764019566520105675"
            }
          },
          "parameters": {
            "appName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "sku": {
              "type": "string",
              "defaultValue": "F1",
              "allowedValues": [
                "B1",
                "S1",
                "F1"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-09-01",
              "name": "[format('sp-{0}', parameters('appName'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('sku')]",
                "capacity": 1
              },
              "tags": {
                "Application": "[parameters('appName')]"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-09-01",
              "name": "[format('webapp-{0}-{1}', parameters('appName'), uniqueString(resourceGroup().id))]",
              "location": "[parameters('location')]",
              "tags": {
                "Application": "[parameters('appName')]"
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('sp-{0}', parameters('appName')))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', format('sp-{0}', parameters('appName')))]"
              ]
            },
            {
              "condition": "[equals(parameters('sku'), 'S1')]",
              "type": "Microsoft.Web/sites/slots",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', format('webapp-{0}-{1}', parameters('appName'), uniqueString(resourceGroup().id)), format('{0}-staging', format('webapp-{0}-{1}', parameters('appName'), uniqueString(resourceGroup().id))))]",
              "location": "[parameters('location')]",
              "tags": {
                "Application": "[parameters('appName')]"
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('sp-{0}', parameters('appName')))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', format('sp-{0}', parameters('appName')))]",
                "[resourceId('Microsoft.Web/sites', format('webapp-{0}-{1}', parameters('appName'), uniqueString(resourceGroup().id)))]"
              ]
            },
            {
              "condition": "[equals(parameters('sku'), 'S1')]",
              "type": "Microsoft.Insights/autoscalesettings",
              "apiVersion": "2022-10-01",
              "name": "[format('{0}-Autoscale', format('sp-{0}', parameters('appName')))]",
              "location": "[parameters('location')]",
              "tags": {},
              "properties": {
                "enabled": true,
                "name": "[format('{0}-Autoscale', format('sp-{0}', parameters('appName')))]",
                "targetResourceUri": "[resourceId('Microsoft.Web/serverfarms', format('sp-{0}', parameters('appName')))]",
                "profiles": [
                  {
                    "name": "Auto created default scale condition",
                    "capacity": {
                      "minimum": "1",
                      "maximum": "10",
                      "default": "1"
                    },
                    "rules": [
                      {
                        "scaleAction": {
                          "direction": "Increase",
                          "type": "ChangeCount",
                          "value": "1",
                          "cooldown": "PT5M"
                        },
                        "metricTrigger": {
                          "metricName": "CpuPercentage",
                          "metricNamespace": "microsoft.web/serverfarms",
                          "metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', format('sp-{0}', parameters('appName')))]",
                          "operator": "GreaterThanOrEqual",
                          "statistic": "Average",
                          "threshold": 80,
                          "timeAggregation": "Average",
                          "timeGrain": "PT1M",
                          "timeWindow": "PT10M",
                          "dimensions": [],
                          "dividePerInstance": false
                        }
                      },
                      {
                        "scaleAction": {
                          "direction": "Decrease",
                          "type": "ChangeCount",
                          "value": "1",
                          "cooldown": "PT5M"
                        },
                        "metricTrigger": {
                          "metricName": "CpuPercentage",
                          "metricNamespace": "microsoft.web/serverfarms",
                          "metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', format('sp-{0}', parameters('appName')))]",
                          "operator": "LessThanOrEqual",
                          "statistic": "Average",
                          "threshold": 40,
                          "timeAggregation": "Average",
                          "timeGrain": "PT1M",
                          "timeWindow": "PT10M",
                          "dimensions": [],
                          "dividePerInstance": false
                        }
                      }
                    ]
                  }
                ],
                "notifications": [],
                "targetResourceLocation": "Canada Central"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', format('sp-{0}', parameters('appName')))]"
              ]
            }
          ],
          "outputs": {
            "webAppName": {
              "type": "string",
              "value": "[format('webapp-{0}-{1}', parameters('appName'), uniqueString(resourceGroup().id))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Databases",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "serverName": {
            "value": "[parameters('serverName')]"
          },
          "dbSettings": {
            "value": "[variables('dbSettings')]"
          },
          "dbUser": {
            "value": "[parameters('dbUser')]"
          },
          "dbPassword": {
            "value": "[parameters('dbPassword')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "5717886481643771348"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "serverName": {
              "type": "string"
            },
            "dbSettings": {
              "type": "array"
            },
            "dbUser": {
              "type": "string"
            },
            "dbPassword": {
              "type": "securestring",
              "minLength": 10,
              "maxLength": 20
            }
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2021-11-01",
              "name": "[format('srv-{0}', parameters('serverName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "administratorLogin": "[parameters('dbUser')]",
                "administratorLoginPassword": "[parameters('dbPassword')]"
              }
            },
            {
              "copy": {
                "name": "sqlDatabase",
                "count": "[length(parameters('dbSettings'))]"
              },
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', format('srv-{0}', parameters('serverName')), format('db-{0}', parameters('dbSettings')[copyIndex()].Name))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('dbSettings')[copyIndex()].sku]",
                "tier": "[parameters('dbSettings')[copyIndex()].sku]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', format('srv-{0}', parameters('serverName')))]"
              ]
            },
            {
              "type": "Microsoft.Sql/servers/firewallRules",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', format('srv-{0}', parameters('serverName')), format('{0}-AutoriserToutIps', parameters('serverName')))]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', format('srv-{0}', parameters('serverName')))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Storage",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "containerName": {
            "value": "[parameters('containerName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "16894501085889714766"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "containerName": {
              "type": "string"
            },
            "sku": {
              "type": "string",
              "defaultValue": "Standard_ZRS"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[parameters('storageAccountName')]",
              "kind": "StorageV2",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('sku')]"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', parameters('containerName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            }
          ]
        }
      }
    }
  ]
}