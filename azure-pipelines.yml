# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
- stage: 'Build'
  pool:
    vmImage: ubuntu-latest

  variables:
    buildConfiguration: 'Release'

  jobs:
  - job: "Build"
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restaurer les packages NuGet'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'


    - task: DotNetCoreCLI@2
      displayName: 'Génération de la solutionn'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Execution des tests unitaires'
      inputs:
        command: 'test'
        projects: '**/*UnitTests.csproj'
        arguments: '--configuration $(buildConfiguration)' 

    - task: DotNetCoreCLI@2
      displayName: 'publication de la solution'
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'


    - task: PublishBuildArtifacts@1
      displayName: 'publication de artefact dans azure pipepline'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'



# API deployment stages

#DEPLOYMENT POSTULATION API
- stage: DeployPostulationsAPI
  dependsOn: Build
  pool:
    vmImage: ubuntu-latest

#DEV
  jobs:
  - deployment: "DeployPostulationsAPIDev"
    dependsOn: Build
    environment: 'Dev'
    strategy:
     runOnce:
       deploy:
         steps:
             - task: DownloadBuildArtifacts@1
               displayName: 'Télécharger artecfact pour le déploiement'
               inputs:
                 buildType: 'current'
                 downloadType: 'single'
                 artifactName: 'drop'
                 downloadPath: '$(System.ArtifactsDirectory)'
             - task: AzureWebApp@1
               displayName: 'Déployer dabs App Service'
               inputs:
                azureSubscription: 'sc-azure-demo'
                appType: 'webApp'
                appName: # A FAIRE
                package: '$(System.ArtifactsDirectory)/**/*.zip'
                deploymentMethod: 'auto'
                
#PROD
  jobs:
  - deployment: "DeployPostulationsAPIProd"
    dependsOn: DeployPostulationsAPIDev
    environment: 'Production'
    strategy:
     runOnce:
       deploy:
         steps:
             - task: DownloadBuildArtifacts@1
               displayName: 'Télécharger artecfact pour le déploiement'
               inputs:
                 buildType: 'current'
                 downloadType: 'single'
                 artifactName: 'drop'
                 downloadPath: '$(System.ArtifactsDirectory)'
             - task: AzureWebApp@1
               displayName: 'Déployer dans App Service'
               inputs:
                azureSubscription: 'sc-azure-demo'
                appType: 'webApp'
                appName: # A FAIRE
                package: '$(System.ArtifactsDirectory)/**/*.zip'
                deploymentMethod: 'auto'


#DEPLOYMENT EMPLOIS API
- stage: DeployEmploisAPI
  dependsOn: Build
  pool:
    vmImage: ubuntu-latest

#DEV
  jobs:
  - deployment: "DeployEmploisAPIDev"
    dependsOn: Build
    environment: 'Dev'
    strategy:
     runOnce:
       deploy:
         steps:
             - task: DownloadBuildArtifacts@1
               displayName: 'Télécharger artecfact pour le déploiement'
               inputs:
                 buildType: 'current'
                 downloadType: 'single'
                 artifactName: 'drop'
                 downloadPath: '$(System.ArtifactsDirectory)'
             - task: AzureWebApp@1
               displayName: 'Déployer dabs App Service'
               inputs:
                azureSubscription: 'sc-azure-demo'
                appType: 'webApp'
                appName: # A FAIRE
                package: '$(System.ArtifactsDirectory)/**/*.zip'
                deploymentMethod: 'auto'
                
#PROD
  jobs:
  - deployment: "DeployEmploisAPIProd"
    dependsOn: DeployEmploisAPIDev
    environment: 'Production'
    strategy:
     runOnce:
       deploy:
         steps:
             - task: DownloadBuildArtifacts@1
               displayName: 'Télécharger artecfact pour le déploiement'
               inputs:
                 buildType: 'current'
                 downloadType: 'single'
                 artifactName: 'drop'
                 downloadPath: '$(System.ArtifactsDirectory)'
             - task: AzureWebApp@1
               displayName: 'Déployer dans App Service'
               inputs:
                azureSubscription: 'sc-azure-demo'
                appType: 'webApp'
                appName: # A FAIRE
                package: '$(System.ArtifactsDirectory)/**/*.zip'
                deploymentMethod: 'auto'


#DEPLOYMENT FAVORIS API
- stage: DeployFavorisnAPI
  dependsOn: Build
  pool:
    vmImage: ubuntu-latest

#DEV
  jobs:
  - deployment: "DeployFavorisAPIDev"
    dependsOn: Build
    environment: 'Dev'
    strategy:
     runOnce:
       deploy:
         steps:
             - task: DownloadBuildArtifacts@1
               displayName: 'Télécharger artecfact pour le déploiement'
               inputs:
                 buildType: 'current'
                 downloadType: 'single'
                 artifactName: 'drop'
                 downloadPath: '$(System.ArtifactsDirectory)'
             - task: AzureWebApp@1
               displayName: 'Déployer dabs App Service'
               inputs:
                azureSubscription: 'sc-azure-demo'
                appType: 'webApp'
                appName: # A FAIRE
                package: '$(System.ArtifactsDirectory)/**/*.zip'
                deploymentMethod: 'auto'
                
#PROD
  jobs:
  - deployment: "DeployFavorisAPIProd"
    dependsOn: DeployFavorisAPIDev
    environment: 'Production'
    strategy:
     runOnce:
       deploy:
         steps:
             - task: DownloadBuildArtifacts@1
               displayName: 'Télécharger artecfact pour le déploiement'
               inputs:
                 buildType: 'current'
                 downloadType: 'single'
                 artifactName: 'drop'
                 downloadPath: '$(System.ArtifactsDirectory)'
             - task: AzureWebApp@1
               displayName: 'Déployer dans App Service'
               inputs:
                azureSubscription: 'sc-azure-demo'
                appType: 'webApp'
                appName: # A FAIRE
                package: '$(System.ArtifactsDirectory)/**/*.zip'
                deploymentMethod: 'auto'


#DEPLOYMENT DOCUMENTS API
- stage: DeployDocumentsAPI
  dependsOn: Build
  pool:
    vmImage: ubuntu-latest

#DEV
  jobs:
  - deployment: "DeployDocumentsAPIDev"
    dependsOn: Build
    environment: 'Dev'
    strategy:
     runOnce:
       deploy:
         steps:
             - task: DownloadBuildArtifacts@1
               displayName: 'Télécharger artecfact pour le déploiement'
               inputs:
                 buildType: 'current'
                 downloadType: 'single'
                 artifactName: 'drop'
                 downloadPath: '$(System.ArtifactsDirectory)'
             - task: AzureWebApp@1
               displayName: 'Déployer dabs App Service'
               inputs:
                azureSubscription: 'sc-azure-demo'
                appType: 'webApp'
                appName: # A FAIRE
                package: '$(System.ArtifactsDirectory)/**/*.zip'
                deploymentMethod: 'auto'
                
#PROD
  jobs:
  - deployment: "DeployDocumentsAPIProd"
    dependsOn: DeployDocumentsAPIDev
    environment: 'Production'
    strategy:
     runOnce:
       deploy:
         steps:
             - task: DownloadBuildArtifacts@1
               displayName: 'Télécharger artecfact pour le déploiement'
               inputs:
                 buildType: 'current'
                 downloadType: 'single'
                 artifactName: 'drop'
                 downloadPath: '$(System.ArtifactsDirectory)'
             - task: AzureWebApp@1
               displayName: 'Déployer dans App Service'
               inputs:
                azureSubscription: 'sc-azure-demo'
                appType: 'webApp'
                appName: # A FAIRE
                package: '$(System.ArtifactsDirectory)/**/*.zip'
                deploymentMethod: 'auto'


#DEPLOYMENT MVC
- stage: DeployMVC
  pool:
    vmImage: ubuntu-latest

#DEV
  jobs:
  - deployment: "DeployMVCDev"
    dependsOn: 
      DeployPostulationsAPI
      DeployEmploisAPI
      DeployFavorisAPI
      DeployDocumentsAPI
    environment: 'Dev'
    strategy:
     runOnce:
       deploy:
         steps:
             - task: DownloadBuildArtifacts@1
               displayName: 'Télécharger artecfact pour le déploiement'
               inputs:
                 buildType: 'current'
                 downloadType: 'single'
                 artifactName: 'drop'
                 downloadPath: '$(System.ArtifactsDirectory)'
             - task: AzureWebApp@1
               displayName: 'Déployer dabs App Service'
               inputs:
                azureSubscription: 'sc-azure-demo'
                appType: 'webApp'
                appName: # A FAIRE
                package: '$(System.ArtifactsDirectory)/**/*.zip'
                deploymentMethod: 'auto'
                
#PROD
  jobs:
  - deployment: "DeployMVCProd"
    dependsOn: 
      DeployPostulationsAPIProd
      DeployEmploisAPIProd
      DeployFavorisAPIProd
      DeployDocumentsAPIProd
    environment: 'Production'
    strategy:
     runOnce:
       deploy:
         steps:
             - task: DownloadBuildArtifacts@1
               displayName: 'Télécharger artecfact pour le déploiement'
               inputs:
                 buildType: 'current'
                 downloadType: 'single'
                 artifactName: 'drop'
                 downloadPath: '$(System.ArtifactsDirectory)'
             - task: AzureWebApp@1
               displayName: 'Déployer dans App Service'
               inputs:
                azureSubscription: 'sc-azure-demo'
                appType: 'webApp'
                appName: # A FAIRE
                package: '$(System.ArtifactsDirectory)/**/*.zip'
                deploymentMethod: 'auto'

