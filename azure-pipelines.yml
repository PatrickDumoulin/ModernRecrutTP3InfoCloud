# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
- stage: 'Build'
  pool:
    vmImage: ubuntu-latest

  variables:
    buildConfiguration: 'Release'

  jobs:
  - job: "Build"
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restaurer les packages NuGet'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'


    - task: DotNetCoreCLI@2
      displayName: 'Génération de la solutionn'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Execution des tests unitaires'
      inputs:
        command: 'test'
        projects: '**/*UnitTests.csproj'
        arguments: '--configuration $(buildConfiguration)' 

    - task: DotNetCoreCLI@2
      displayName: 'publication de la solution'
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'


    - task: PublishBuildArtifacts@1
      displayName: 'publication de artefact dans azure pipepline'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'



- stage: 'DeployToDev'
  dependsOn: 'Build'
  pool:
    vmImage: ubuntu-latest

  jobs:
  - deployment: "DeployDev"
    environment: 'Dev'
    strategy:
     runOnce:
       deploy:
         steps:
             - task: DownloadBuildArtifacts@1
               displayName: 'Télécharger artecfact pour le déploiement'
               inputs:
                 buildType: 'current'
                 downloadType: 'single'
                 artifactName: 'drop'
                 downloadPath: '$(System.ArtifactsDirectory)'



- stage: 'DeployToProd'
  dependsOn: 'DeployToDev'
  pool:
    vmImage: ubuntu-latest

  jobs:
  - deployment: "DeployProd"
    environment: 'Production'
    strategy:
     runOnce:
       deploy:
         steps:
             - task: DownloadBuildArtifacts@1
               displayName: 'Télécharger artecfact pour le déploiement'
               inputs:
                 buildType: 'current'
                 downloadType: 'single'
                 artifactName: 'drop'
                 downloadPath: '$(System.ArtifactsDirectory)'


             - task: AzureWebApp@1
               displayName: 'Déployer dabs App Service'
               inputs:
                azureSubscription: 'sc-azure-demo'
                appType: 'webApp'
                appName: 
                package: '$(System.ArtifactsDirectory)/**/*.zip'
                deploymentMethod: 'auto'
                 
